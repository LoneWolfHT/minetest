name: build

# build on c/cpp changes or workflow changes
on:
  push:
    paths:
      - 'lib/**.[ch]'
      - 'lib/**.cpp'
      - 'src/**.[ch]'
      - 'src/**.cpp'
      - '**/CMakeLists.txt'
      - 'cmake/Modules/**'
      - 'util/buildbot/**'
      - 'util/ci/**'
      - '.github/workflows/**.yml'
      - 'Dockerfile'
      - '.dockerignore'
  pull_request:
    paths:
      - 'lib/**.[ch]'
      - 'lib/**.cpp'
      - 'src/**.[ch]'
      - 'src/**.cpp'
      - '**/CMakeLists.txt'
      - 'cmake/Modules/**'
      - 'util/buildbot/**'
      - 'util/ci/**'
      - '.github/workflows/**.yml'
      - 'Dockerfile'
      - '.dockerignore'

jobs:
  msvc:
    name: VS 2019 ${{ matrix.config.arch }}-${{ matrix.type }}
    runs-on: windows-2019
    env:
      VCPKG_VERSION: 5cf60186a241e84e8232641ee973395d4fde90e1
      # 2022.02
      vcpkg_packages: zlib zstd curl[winssl] openal-soft libvorbis libogg libjpeg-turbo sqlite3 freetype luajit gmp jsoncpp opengl-registry
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              arch: x86,
              generator: "-G'Visual Studio 16 2019' -A Win32",
              vcpkg_triplet: x86-windows
            }
          - {
              arch: x64,
              generator: "-G'Visual Studio 16 2019' -A x64",
              vcpkg_triplet: x64-windows
            }
        type: [installer]
#        type: [portable, installer]
# The installer type is working, but disabled, to save runner jobs.
# Enable it, when working on the installer.

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: Checkout IrrlichtMT
        uses: actions/checkout@v2.4.0
        with:
          repository: minetest/irrlicht
          path: lib/irrlichtmt/
          ref: "1.9.0mt4"

      - name: Restore from cache and run vcpkg
        uses: lukka/run-vcpkg@v7
        with:
          vcpkgArguments: ${{env.vcpkg_packages}}
          vcpkgDirectory: '${{ github.workspace }}\vcpkg'
          appendedCacheKey: ${{ matrix.config.vcpkg_triplet }}
          vcpkgGitCommitId: ${{ env.VCPKG_VERSION }}
          vcpkgTriplet: ${{ matrix.config.vcpkg_triplet }}

      - name: Minetest CMake
        run: |
          cmake ${{matrix.config.generator}}  `
          -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake"  `
          -DCMAKE_BUILD_TYPE=Release  `
          -DENABLE_POSTGRESQL=OFF  `
          -DRUN_IN_PLACE=${{ contains(matrix.type, 'portable') }} .

      - name: Build Minetest
        run: cmake --build . --config Release

      - name: CPack
        run: |
          If ($env:TYPE -eq "installer")
          {
            cpack -G WIX -B "$env:GITHUB_WORKSPACE\Package"
          }
          ElseIf($env:TYPE -eq "portable")
          {
            cpack -G ZIP -B "$env:GITHUB_WORKSPACE\Package"
          }
        env:
          TYPE: ${{matrix.type}}

      - name: Package Clean
        run: rm -r $env:GITHUB_WORKSPACE\Package\_CPack_Packages

      - uses: actions/upload-artifact@v1
        with:
          name: msvc-${{ matrix.config.arch }}-${{ matrix.type }}
          path: .\Package\
